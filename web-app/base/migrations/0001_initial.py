# Generated by Django 4.2.9 on 2024-01-24 19:49

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(default='NULL', help_text='First Name', max_length=64)),
                ('last_name', models.CharField(default='NULL', help_text='Last Name', max_length=64)),
                ('phone_num', phonenumber_field.modelfields.PhoneNumberField(default='+19841234567', max_length=128, primary_key=True, region=None, serialize=False)),
                ('email', models.CharField(max_length=64)),
                ('psw', models.CharField(default='NULL', max_length=64)),
                ('user_cata', models.CharField(choices=[('Passenger', 'PASSENGER'), ('Driver', 'DRIVER')], default='Passenger', max_length=10)),
                ('license_num', models.CharField(blank=True, help_text='License Number', max_length=64, null=True)),
                ('plate_num', models.CharField(blank=True, help_text='Plate Number', max_length=20, null=True)),
                ('max_passenger', models.IntegerField(blank=True, help_text='Max Passenger', null=True)),
                ('vehicle_type', models.CharField(blank=True, choices=[('Economy', '0'), ('Comfort', '1'), ('Large', '2'), ('XL', '3')], default='Economy', max_length=20, null=True)),
                ('vehicle_brand', models.CharField(blank=True, max_length=20, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Ride',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, help_text='uuid for request', primary_key=True, serialize=False)),
                ('start', models.CharField(max_length=100)),
                ('destination', models.CharField(max_length=100)),
                ('order_time', models.DateTimeField(auto_now=True)),
                ('pick_up_time', models.DateTimeField(blank=True, help_text='YYYY-MM-DD HH:MM', null=True)),
                ('arrival_time', models.DateTimeField(blank=True, help_text='YYYY-MM-DD HH:MM', null=True)),
                ('owner_passenger_num', models.IntegerField(blank=True, null=True)),
                ('shared', models.BooleanField(default=False)),
                ('extra_request', models.CharField(blank=True, max_length=100, null=True)),
                ('ride_status', models.CharField(choices=[('Open', 'OPEN'), ('Cancelled', 'CANCELLED'), ('Comfirmed', 'COMFIRMED'), ('In Progress', 'PROGRESS'), ('Completed', 'COMPLETED')], default='open', max_length=15)),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ride_driver', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ride_owner', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('group_id', models.UUIDField(auto_created=True, default=uuid.uuid4, primary_key=True, serialize=False)),
                ('companions', models.ManyToManyField(related_name='participated_group', to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_order', to=settings.AUTH_USER_MODEL)),
                ('sharer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='group_owner', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
